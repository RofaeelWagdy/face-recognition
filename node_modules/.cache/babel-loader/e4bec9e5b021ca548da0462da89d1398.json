{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/rofa/ROF@/programing/Web Development/Web Development Tutorials/face-recognition/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Navigation from './components/Navigation/Navigation';\nimport Register from './components/Register/Register';\nimport Signin from './components/Signin/Signin';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: \"7fe3f47b696348269f9d8f8fea852cb9\"\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.loadUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          name: data.name,\n          email: data.email,\n          enteries: data.enteries,\n          joined: data.joined\n        }\n      });\n    };\n\n    this.caluculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('imageinput');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      }); //changing the data according to the input that the user put\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => {\n        if (response) {\n          fetch('http://localhost:3000/image', {\n            method: 'put',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              id: this.state.user.id\n            })\n          }).then(response => response.json()).then(count => {\n            this.setState({\n              users: {\n                enteries: count\n              }\n            });\n          });\n        }\n\n        this.displayFaceBox(this.caluculateFaceLocation(response));\n      }).catch(err => console.log(err));\n    };\n\n    this.onRouteChange = route => {\n      if (route === 'signout') {\n        this.setState({\n          isSignedIn: false\n        });\n      } else if (route === 'home') {\n        this.setState({\n          isSignedIn: true\n        });\n      }\n\n      this.setState({\n        route: route\n      });\n    };\n\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n      user: {\n        id: '',\n        name: '',\n        email: '',\n        enteries: 0,\n        joined: ''\n      }\n    };\n  }\n\n  render() {\n    const {\n      isSignedIn,\n      imageURL,\n      route,\n      box\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        isSignedIn: isSignedIn,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 4\n      }, this), route === 'home' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Rank, {\n          name: this.state.user.name,\n          enteries: this.state.user.entries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n          onInputChange: this.onInputChange,\n          onButtonSubmit: this.onButtonSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n          box: box,\n          imageURL: imageURL\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this) : route === 'signin' ? /*#__PURE__*/_jsxDEV(Signin, {\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 8\n      }, this) : /*#__PURE__*/_jsxDEV(Register, {\n        loadUser: this.loadUser,\n        onRouteChange: this.onRouteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/media/rofa/ROF@/programing/Web Development/Web Development Tutorials/face-recognition/src/App.js"],"names":["React","Component","Particles","Clarifai","FaceRecognition","ImageLinkForm","Navigation","Register","Signin","Logo","Rank","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","loadUser","data","setState","user","id","name","email","enteries","joined","caluculateFaceLocation","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","onInputChange","event","input","target","onButtonSubmit","imageURL","state","models","predict","FACE_DETECT_MODEL","then","response","fetch","method","headers","body","JSON","stringify","json","count","users","catch","err","console","log","onRouteChange","route","isSignedIn","render","entries"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Particles from 'react-particles-js'\nimport Clarifai from 'clarifai'\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Navigation from './components/Navigation/Navigation';\nimport Register from './components/Register/Register';\nimport Signin from './components/Signin/Signin';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\nimport './App.css';\n\nconst app = new Clarifai.App({\n\tapiKey: \"7fe3f47b696348269f9d8f8fea852cb9\"\n})\n\nconst particlesOptions = {\n\tparticles: {\n\t\tnumber: {\n\t\t\tvalue: 100,\n\t\t\tdensity:{\n\t\t\t\tenable: true,\n\t\t\t\tvalue_area: 800\n\t\t\t}\n\t\t}\n\t}\n}\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tinput:'',\n\t\t\timageURL:'',\n\t\t\tbox: {},\n\t\t\troute: 'signin',\n\t\t\tisSignedIn: false,\n\t\t\tuser:{\n\t\t\t\tid: '',\n\t\t\t\tname: '',\n\t\t\t\temail: '',\n\t\t\t\tenteries: 0,\n\t\t\t\tjoined: ''\n\t\t\t}\n\t\t}\n\t}\n\nloadUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      name: data.name,\n      email: data.email,\n      enteries: data.enteries,\n      joined: data.joined\n   }})\n }\n\n\tcaluculateFaceLocation = (data) => {\n\t\tconst clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n\t\tconst image = document.getElementById('imageinput');\n\t\tconst width = Number(image.width);\n\t\tconst height = Number(image.height);\n\t\treturn {\n\t\t\tleftCol: clarifaiFace.left_col * width,\n\t\t\ttopRow: clarifaiFace.top_row * height,\n\t\t\trightCol: width - (clarifaiFace.right_col * width),\n\t\t\tbottomRow: height - (clarifaiFace.bottom_row * height)\n\t\t}\n\t}\n\n\tdisplayFaceBox = (box) => {\n\t\tthis.setState({box: box});\n\t}\n\n\n\tonInputChange = (event) => {\n\t\tthis.setState({input:event.target.value})\n\t}\n\n\tonButtonSubmit = () => {\n\t\tthis.setState({imageURL:this.state.input})\t//changing the data according to the input that the user put\n\t\tapp.models.predict(\n\t\t\tClarifai.FACE_DETECT_MODEL, \n\t\t\tthis.state.input)\n\t\t.then(response => {\n\t\t\tif (response) {\n\t\t\t\tfetch('http://localhost:3000/image',{\n\t\t\t\t\tmethod: 'put',\n\t\t\t\t\theaders: {'Content-Type': 'application/json'},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tid: this.state.user.id,\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t\t\t.then(response => response.json())\n\t\t\t\t\t.then(count => {\n\t\t\t\t\t\tthis.setState({users:{\n\t\t\t\t\t\t\tenteries:count\n\t\t\t\t\t\t}})\n\t\t\t\t\t})\n\t\t\t}\n\t\t\tthis.displayFaceBox(this.caluculateFaceLocation(response))\n\t\t})\n\t\t.catch(err => console.log(err))\n\t}\n\n\tonRouteChange = (route) => {\n\t\tif (route === 'signout') {\n\t\t\tthis.setState({isSignedIn: false})\n\t\t} else if (route === 'home'){\n\t\t\tthis.setState({isSignedIn: true})\n\t\t}\n\t\tthis.setState({route: route});\n\t}\n\n\trender(){\n\t\tconst {isSignedIn, imageURL, route, box} = this.state\n\t\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Particles className='particles'\n\t\t\t\tparams={particlesOptions}\n\t\t\t/>\n\t\t\t<Navigation isSignedIn={isSignedIn}onRouteChange={this.onRouteChange}/>\n\t\t\t{\troute === 'home' \n\t\t\t\t? <div>\n\t\t\t\t\t\t<Logo />\n\t\t\t\t\t\t<Rank name={this.state.user.name}\n                enteries={this.state.user.entries}/>\n\t\t\t\t\t\t<ImageLinkForm  \n\t\t\t\t\t\t\tonInputChange={this.onInputChange} \n\t\t\t\t\t\t\tonButtonSubmit={this.onButtonSubmit}/>\n\t\t\t\t\t\t<FaceRecognition box={box} imageURL={imageURL}/>\n\t\t\t\t\t</div> \n\t\t\t\t: (\n\t\t\t\t\troute === 'signin' \n\t\t\t\t\t? <Signin  onRouteChange={this.onRouteChange}/>\n\t\t\t\t\t: <Register loadUser={this.loadUser} onRouteChange={this.onRouteChange}/>\n\t\t\t\t\t) \n\t\t\t}\n\t\t</div>\n\t\t);\n\t}\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}