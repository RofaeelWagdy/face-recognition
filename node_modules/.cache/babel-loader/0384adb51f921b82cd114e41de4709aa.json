{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/media/rofa/ROF@/programing/Web Development/Web Development Tutorials/face-recognition/src/App.js\";\nimport React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\nconst app = new Clarifai.App({\n  apiKey: \"7fe3f47b696348269f9d8f8fea852cb9\"\n});\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density: {\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.caluculateFaceLocation = data => {\n      const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n      const image = document.getElementById('imageinput');\n      const width = Number(image.width);\n      const height = Number(image.height);\n      return {\n        leftCol: clarifaiFace.left_col * width,\n        topRow: clarifaiFace.top_row * height,\n        rightCol: width - clarifaiFace.right_col * width,\n        bottomRow: height - clarifaiFace.bottom_row * height\n      };\n    };\n\n    this.displayFaceBox = box => {\n      console.log(box);\n      this.setState({\n        box: box\n      });\n    };\n\n    this.onInputChange = event => {\n      this.setState({\n        input: event.target.value\n      });\n    };\n\n    this.onButtonSubmit = () => {\n      this.setState({\n        imageURL: this.state.input\n      }); //chanigin the data according to input the user put\n\n      app.models.predict(Clarifai.FACE_DETECT_MODEL, this.state.input).then(response => this.displayFaceBox(this.caluculateFaceLocation(response))).catch(err => console.log(err));\n    };\n\n    this.state = {\n      input: '',\n      imageURL: '',\n      box: {}\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Particles, {\n        className: \"particles\",\n        params: particlesOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Rank, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(ImageLinkForm, {\n        onInputChange: this.onInputChange,\n        onButtonSubmit: this.onButtonSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(FaceRecognition, {\n        box: this,\n        imageURL: this.state.imageURL\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 3\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/media/rofa/ROF@/programing/Web Development/Web Development Tutorials/face-recognition/src/App.js"],"names":["React","Component","Particles","Clarifai","Navigation","Logo","ImageLinkForm","Rank","FaceRecognition","app","App","apiKey","particlesOptions","particles","number","value","density","enable","value_area","constructor","caluculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","width","Number","height","leftCol","left_col","topRow","top_row","rightCol","right_col","bottomRow","bottom_row","displayFaceBox","box","console","log","setState","onInputChange","event","input","target","onButtonSubmit","imageURL","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,UAAP,MAAuB,oCAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,aAAP,MAA0B,0CAA1B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,eAAP,MAA4B,8CAA5B;AACA,OAAO,WAAP;AAEA,MAAMC,GAAG,GAAG,IAAIN,QAAQ,CAACO,GAAb,CAAiB;AAC5BC,EAAAA,MAAM,EAAE;AADoB,CAAjB,CAAZ;AAIA,MAAMC,gBAAgB,GAAG;AACvBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,GADD;AAENC,MAAAA,OAAO,EAAC;AACNC,QAAAA,MAAM,EAAE,IADF;AAENC,QAAAA,UAAU,EAAE;AAFN;AAFF;AADC;AADY,CAAzB;;AAYA,MAAMR,GAAN,SAAkBT,SAAlB,CAA4B;AAC1BkB,EAAAA,WAAW,GAAG;AACZ;;AADY,SASbC,sBATa,GASaC,IAAD,IAAU;AACnC,YAAMC,YAAY,GAAGD,IAAI,CAACE,OAAL,CAAa,CAAb,EAAgBF,IAAhB,CAAqBG,OAArB,CAA6B,CAA7B,EAAgCC,WAAhC,CAA4CC,YAAjE;AACA,YAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAd;AACA,YAAMC,KAAK,GAAGC,MAAM,CAACJ,KAAK,CAACG,KAAP,CAApB;AACA,YAAME,MAAM,GAAGD,MAAM,CAACJ,KAAK,CAACK,MAAP,CAArB;AACA,aAAO;AACNC,QAAAA,OAAO,EAAEX,YAAY,CAACY,QAAb,GAAwBJ,KAD3B;AAENK,QAAAA,MAAM,EAAEb,YAAY,CAACc,OAAb,GAAuBJ,MAFzB;AAGNK,QAAAA,QAAQ,EAAEP,KAAK,GAAIR,YAAY,CAACgB,SAAb,GAAyBR,KAHtC;AAINS,QAAAA,SAAS,EAAEP,MAAM,GAAIV,YAAY,CAACkB,UAAb,GAA0BR;AAJzC,OAAP;AAMA,KApBa;;AAAA,SAsBdS,cAtBc,GAsBIC,GAAD,IAAS;AACzBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAKG,QAAL,CAAc;AAACH,QAAAA,GAAG,EAAEA;AAAN,OAAd;AACA,KAzBa;;AAAA,SA4BdI,aA5Bc,GA4BGC,KAAD,IAAW;AAC3B,WAAKF,QAAL,CAAc;AAACG,QAAAA,KAAK,EAACD,KAAK,CAACE,MAAN,CAAalC;AAApB,OAAd;AACC,KA9Ba;;AAAA,SAgCdmC,cAhCc,GAgCG,MAAM;AACtB,WAAKL,QAAL,CAAc;AAACM,QAAAA,QAAQ,EAAC,KAAKC,KAAL,CAAWJ;AAArB,OAAd,EADsB,CACqB;;AAC3CvC,MAAAA,GAAG,CAAC4C,MAAJ,CAAWC,OAAX,CACCnD,QAAQ,CAACoD,iBADV,EAEC,KAAKH,KAAL,CAAWJ,KAFZ,EAGCQ,IAHD,CAGMC,QAAQ,IAAI,KAAKhB,cAAL,CAAoB,KAAKrB,sBAAL,CAA4BqC,QAA5B,CAApB,CAHlB,EAICC,KAJD,CAIOC,GAAG,IAAIhB,OAAO,CAACC,GAAR,CAAYe,GAAZ,CAJd;AAKA,KAvCa;;AAEZ,SAAKP,KAAL,GAAa;AACXJ,MAAAA,KAAK,EAAC,EADK;AAEXG,MAAAA,QAAQ,EAAC,EAFE;AAGXT,MAAAA,GAAG,EAAE;AAHM,KAAb;AAKD;;AAkCDkB,EAAAA,MAAM,GAAE;AACR,wBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACC,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,WAArB;AACC,QAAA,MAAM,EAAEhD;AADT;AAAA;AAAA;AAAA;AAAA,cADD,eAIC,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAJD,eAKC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cALD,eAMC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cAND,eAOC,QAAC,aAAD;AACC,QAAA,aAAa,EAAE,KAAKkC,aADrB;AAEC,QAAA,cAAc,EAAE,KAAKI;AAFtB;AAAA;AAAA;AAAA;AAAA,cAPD,eAWC,QAAC,eAAD;AAAiB,QAAA,GAAG,EAAE,IAAtB;AAA4B,QAAA,QAAQ,EAAE,KAAKE,KAAL,CAAWD;AAAjD;AAAA;AAAA;AAAA;AAAA,cAXD;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAeC;;AA1DyB;;AA4D5B,eAAezC,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport Particles from 'react-particles-js'\nimport Clarifai from 'clarifai'\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Rank from './components/Rank/Rank';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport './App.css';\n\nconst app = new Clarifai.App({\n\tapiKey: \"7fe3f47b696348269f9d8f8fea852cb9\"\n})\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 100,\n      density:{\n        enable: true,\n        value_area: 800\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input:'',\n      imageURL:'',\n      box: {}\n    }\n  }\n\n  \tcaluculateFaceLocation = (data) => {\n  \tconst clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n  \tconst image = document.getElementById('imageinput');\n  \tconst width = Number(image.width);\n  \tconst height = Number(image.height);\n  \treturn {\n  \t\tleftCol: clarifaiFace.left_col * width,\n  \t\ttopRow: clarifaiFace.top_row * height,\n  \t\trightCol: width - (clarifaiFace.right_col * width),\n  \t\tbottomRow: height - (clarifaiFace.bottom_row * height)\n  \t}\n  }\n\n  displayFaceBox = (box) => {\n  \tconsole.log(box);\n  \tthis.setState({box: box});\n  }\n\n\n  onInputChange = (event) => {\n\t\tthis.setState({input:event.target.value})\n  }\n\n  onButtonSubmit = () => {\n  \tthis.setState({imageURL:this.state.input})\t//chanigin the data according to input the user put\n  \tapp.models.predict(\n  \t\tClarifai.FACE_DETECT_MODEL, \n  \t\tthis.state.input)\n  \t.then(response => this.displayFaceBox(this.caluculateFaceLocation(response)))\n  \t.catch(err => console.log(err))\n  }\n\n  render(){\n\t\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Particles className='particles'\n\t\t\t\tparams={particlesOptions}\n\t\t\t/>\n\t\t\t<Navigation />\n\t\t\t<Logo />\n\t\t\t<Rank />\n\t\t\t<ImageLinkForm  \n\t\t\t\tonInputChange={this.onInputChange} \n\t\t\t\tonButtonSubmit={this.onButtonSubmit}\n\t\t\t/>\n\t\t\t<FaceRecognition box={this} imageURL={this.state.imageURL}/>\n\t\t</div>\n\t\t);\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}